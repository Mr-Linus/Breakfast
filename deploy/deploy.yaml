apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: breakfast-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: breads.core.run-linux.com
spec:
  group: core.run-linux.com
  names:
    kind: Bread
    listKind: BreadList
    plural: breads
    singular: bread
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Bread is the Schema for the breads API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BreadSpec defines the desired state of Bread
          properties:
            framework:
              properties:
                name:
                  type: string
                version:
                  type: string
              type: object
            scv:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file
                Foo is an example field of Bread. Edit Bread_types.go to remove/update'
              properties:
                clock:
                  type: string
                gpu:
                  type: string
                memory:
                  type: string
                priority:
                  type: string
              type: object
            task:
              properties:
                command:
                  type: string
                type:
                  type: string
              type: object
          type: object
        status:
          description: BreadStatus defines the observed state of Bread
          properties:
            containerStatuses:
              items:
                description: ContainerStatus contains details for the current status
                  of this container.
                properties:
                  containerID:
                    description: Container's ID in the format 'docker://<container_id>'.
                    type: string
                  image:
                    description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
                      TODO(dchen1107): Which image the container is running with?'
                    type: string
                  imageID:
                    description: ImageID of the container's image.
                    type: string
                  lastState:
                    description: Details about the container's last termination condition.
                    properties:
                      running:
                        description: Details about a running container
                        properties:
                          startedAt:
                            description: Time at which the container was last (re-)started
                            format: date-time
                            type: string
                        type: object
                      terminated:
                        description: Details about a terminated container
                        properties:
                          containerID:
                            description: Container's ID in the format 'docker://<container_id>'
                            type: string
                          exitCode:
                            description: Exit status from the last termination of
                              the container
                            format: int32
                            type: integer
                          finishedAt:
                            description: Time at which the container last terminated
                            format: date-time
                            type: string
                          message:
                            description: Message regarding the last termination of
                              the container
                            type: string
                          reason:
                            description: (brief) reason from the last termination
                              of the container
                            type: string
                          signal:
                            description: Signal from the last termination of the container
                            format: int32
                            type: integer
                          startedAt:
                            description: Time at which previous execution of the container
                              started
                            format: date-time
                            type: string
                        required:
                        - exitCode
                        type: object
                      waiting:
                        description: Details about a waiting container
                        properties:
                          message:
                            description: Message regarding why the container is not
                              yet running.
                            type: string
                          reason:
                            description: (brief) reason the container is not yet running.
                            type: string
                        type: object
                    type: object
                  name:
                    description: This must be a DNS_LABEL. Each container in a pod
                      must have a unique name. Cannot be updated.
                    type: string
                  ready:
                    description: Specifies whether the container has passed its readiness
                      probe.
                    type: boolean
                  restartCount:
                    description: The number of times the container has been restarted,
                      currently based on the number of dead containers that have not
                      yet been removed. Note that this is calculated from dead containers.
                      But those containers are subject to garbage collection. This
                      value will get capped at 5 by GC.
                    format: int32
                    type: integer
                  started:
                    description: Specifies whether the container has passed its startup
                      probe. Initialized as false, becomes true after startupProbe
                      is considered successful. Resets to false when the container
                      is restarted, or if kubelet loses state temporarily. Is always
                      true when no startupProbe is defined.
                    type: boolean
                  state:
                    description: Details about the container's current condition.
                    properties:
                      running:
                        description: Details about a running container
                        properties:
                          startedAt:
                            description: Time at which the container was last (re-)started
                            format: date-time
                            type: string
                        type: object
                      terminated:
                        description: Details about a terminated container
                        properties:
                          containerID:
                            description: Container's ID in the format 'docker://<container_id>'
                            type: string
                          exitCode:
                            description: Exit status from the last termination of
                              the container
                            format: int32
                            type: integer
                          finishedAt:
                            description: Time at which the container last terminated
                            format: date-time
                            type: string
                          message:
                            description: Message regarding the last termination of
                              the container
                            type: string
                          reason:
                            description: (brief) reason from the last termination
                              of the container
                            type: string
                          signal:
                            description: Signal from the last termination of the container
                            format: int32
                            type: integer
                          startedAt:
                            description: Time at which previous execution of the container
                              started
                            format: date-time
                            type: string
                        required:
                        - exitCode
                        type: object
                      waiting:
                        description: Details about a waiting container
                        properties:
                          message:
                            description: Message regarding why the container is not
                              yet running.
                            type: string
                          reason:
                            description: (brief) reason the container is not yet running.
                            type: string
                        type: object
                    type: object
                required:
                - image
                - imageID
                - name
                - ready
                - restartCount
                type: object
              type: array
            phase:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: breakfast-system/breakfast-serving-cert
  creationTimestamp: null
  name: breakfast-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: breakfast-webhook-service
      namespace: breakfast-system
      path: /mutate-core-run-linux-com-v1alpha1-bread
  failurePolicy: Fail
  name: mbread.kb.io
  rules:
  - apiGroups:
    - core.run-linux.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - breads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: breakfast-leader-election-role
  namespace: breakfast-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: breakfast-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.run-linux.com
  resources:
  - breads
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.run-linux.com
  resources:
  - breads/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: breakfast-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: breakfast-leader-election-rolebinding
  namespace: breakfast-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: breakfast-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: breakfast-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: breakfast-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: breakfast-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: breakfast-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: breakfast-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: breakfast-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: breakfast-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: breakfast-controller-manager-metrics-service
  namespace: breakfast-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: breakfast-webhook-service
  namespace: breakfast-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: breakfast-controller-manager
  namespace: breakfast-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.azk8s.cn/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: registry.cn-hangzhou.aliyuncs.com/njupt-isl/bread-controller:2.0
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: breakfast-serving-cert
  namespace: breakfast-system
spec:
  dnsNames:
  - breakfast-webhook-service.breakfast-system.svc
  - breakfast-webhook-service.breakfast-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: breakfast-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: breakfast-selfsigned-issuer
  namespace: breakfast-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: breakfast-system/breakfast-serving-cert
  creationTimestamp: null
  name: breakfast-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: breakfast-webhook-service
      namespace: breakfast-system
      path: /validate-core-run-linux-com-v1alpha1-bread
  failurePolicy: Fail
  name: vbread.kb.io
  rules:
  - apiGroups:
    - core.run-linux.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - breads
